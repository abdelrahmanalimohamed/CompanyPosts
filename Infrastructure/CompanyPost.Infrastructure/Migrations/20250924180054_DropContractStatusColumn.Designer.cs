// <auto-generated />
using System;
using CompanyPost.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyPost.Infrastructure.Migrations
{
    [DbContext(typeof(CompanyPostDbContext))]
    [Migration("20250924180054_DropContractStatusColumn")]
    partial class DropContractStatusColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CompanyPost.Domain.Entities.Contracts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("attachments");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contract_number");

                    b.Property<DateTime>("Contract_Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("contract_date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_id");

                    b.Property<int>("Currency")
                        .HasColumnType("int")
                        .HasColumnName("currency");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("details");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("notes");

                    b.Property<Guid>("PersonOrgId")
                        .HasColumnType("char(36)")
                        .HasColumnName("person_org_id");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)")
                        .HasColumnName("project_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("value");

                    b.Property<string>("purchase_order_ref")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("purchase_order_ref");

                    b.Property<string>("working")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("working");

                    b.HasKey("Id")
                        .HasName("pk_contracts");

                    b.HasIndex("CreatedById")
                        .HasDatabaseName("ix_contracts_created_by_id");

                    b.HasIndex("PersonOrgId")
                        .HasDatabaseName("ix_contracts_person_org_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_contracts_project_id");

                    b.ToTable("contracts", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.DeliveryMethods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_delivery_methods");

                    b.ToTable("delivery_methods", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PersonOrg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("Contact_Person")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contact_person");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("SAP_BP")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("sap_bp");

                    b.HasKey("Id")
                        .HasName("pk_person_orgs");

                    b.ToTable("person_orgs", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PostHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_post_headers");

                    b.ToTable("post_headers", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PostTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)")
                        .HasColumnName("post_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_post_types");

                    b.HasIndex("PostId")
                        .HasDatabaseName("ix_post_types_post_id");

                    b.ToTable("post_types", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.Posts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("attachment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_delivery");

                    b.Property<DateTime>("DateOfPost")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_post");

                    b.Property<Guid>("DeliveryMethodId")
                        .HasColumnType("char(36)")
                        .HasColumnName("delivery_method_id");

                    b.Property<Guid>("DeliveryPersonId")
                        .HasColumnType("char(36)")
                        .HasColumnName("delivery_person_id");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("document_number");

                    b.Property<Guid>("PostHeaderId")
                        .HasColumnType("char(36)")
                        .HasColumnName("post_header_id");

                    b.Property<Guid>("PostOriginalSenderId")
                        .HasColumnType("char(36)")
                        .HasColumnName("post_original_sender_id");

                    b.Property<Guid>("PostTypeId")
                        .HasColumnType("char(36)")
                        .HasColumnName("post_type_id");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)")
                        .HasColumnName("project_id");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("serial_number");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subject");

                    b.HasKey("Id")
                        .HasName("pk_posts");

                    b.HasIndex("CreatedById")
                        .HasDatabaseName("ix_posts_created_by_id");

                    b.HasIndex("DeliveryMethodId")
                        .HasDatabaseName("ix_posts_delivery_method_id");

                    b.HasIndex("DeliveryPersonId")
                        .HasDatabaseName("ix_posts_delivery_person_id");

                    b.HasIndex("DocumentNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_posts_document_number");

                    b.HasIndex("PostHeaderId")
                        .HasDatabaseName("ix_posts_post_header_id");

                    b.HasIndex("PostOriginalSenderId")
                        .HasDatabaseName("ix_posts_post_original_sender_id");

                    b.HasIndex("PostTypeId")
                        .HasDatabaseName("ix_posts_post_type_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_posts_project_id");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.Projects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_projects");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.SysUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_sys_users");

                    b.ToTable("sys_users", (string)null);
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.Contracts", b =>
                {
                    b.HasOne("CompanyPost.Domain.Entities.SysUsers", "CreatedBy")
                        .WithMany("Contracts")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contracts_sys_users_created_by_id");

                    b.HasOne("CompanyPost.Domain.Entities.PersonOrg", "PersonOrgs")
                        .WithMany("Contracts")
                        .HasForeignKey("PersonOrgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contracts_person_orgs_person_org_id");

                    b.HasOne("CompanyPost.Domain.Entities.Projects", "Projects")
                        .WithMany("Contracts")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contracts_projects_project_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("PersonOrgs");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PostTypes", b =>
                {
                    b.HasOne("CompanyPost.Domain.Entities.PostHeader", "PostHeader")
                        .WithMany("PostTypes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_post_types_post_headers_post_id");

                    b.Navigation("PostHeader");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.Posts", b =>
                {
                    b.HasOne("CompanyPost.Domain.Entities.SysUsers", "CreatedBy")
                        .WithMany("Posts")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_sys_users_created_by_id");

                    b.HasOne("CompanyPost.Domain.Entities.DeliveryMethods", "DeliveryMethods")
                        .WithMany("Posts")
                        .HasForeignKey("DeliveryMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_delivery_methods_delivery_method_id");

                    b.HasOne("CompanyPost.Domain.Entities.PersonOrg", "DeliveryPersons")
                        .WithMany("PostsAsDeliveryPerson")
                        .HasForeignKey("DeliveryPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_person_orgs_delivery_person_id");

                    b.HasOne("CompanyPost.Domain.Entities.PostHeader", "PostHeaders")
                        .WithMany("Posts")
                        .HasForeignKey("PostHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_post_headers_post_header_id");

                    b.HasOne("CompanyPost.Domain.Entities.PersonOrg", "PostOriginalSenders")
                        .WithMany("PostsAsOriginalSender")
                        .HasForeignKey("PostOriginalSenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_person_orgs_post_original_sender_id");

                    b.HasOne("CompanyPost.Domain.Entities.PostTypes", "PostTypes")
                        .WithMany("Posts")
                        .HasForeignKey("PostTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_post_types_post_type_id");

                    b.HasOne("CompanyPost.Domain.Entities.Projects", "Projects")
                        .WithMany("Posts")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_posts_projects_project_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeliveryMethods");

                    b.Navigation("DeliveryPersons");

                    b.Navigation("PostHeaders");

                    b.Navigation("PostOriginalSenders");

                    b.Navigation("PostTypes");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.DeliveryMethods", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PersonOrg", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("PostsAsDeliveryPerson");

                    b.Navigation("PostsAsOriginalSender");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PostHeader", b =>
                {
                    b.Navigation("PostTypes");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.PostTypes", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.Projects", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CompanyPost.Domain.Entities.SysUsers", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
